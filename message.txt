import React, { useState } from 'react';
import './App.css';
import data from './items.json';

function App() {
  const [name, setName] = useState('');
  const [description, setDescription] = useState('');
  const [contact, setContact] = useState('');
  const [editItemId, setEditItemId] = useState(null); // Track the ID of the item being edited

  const handleNameChange = (e) => {
    setName(e.target.value);
  };

  const handleDescriptionChange = (e) => {
    setDescription(e.target.value);
  };

  const handleContactChange = (e) => {
    setContact(e.target.value);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (editItemId !== null) {
      // Update existing item
      const updatedData = data.map(item => {
        if (item.id === editItemId) {
          return {
            ...item,
            name: name,
            description: description,
            contact: contact
          };
        }
        return item;
      });
      // Update the JSON file or save the data to your backend
      console.log(updatedData);
    } else {
      // Add new item
      const newItem = {
        id: data.length + 1,
        name: name,
        description: description,
        contact: contact
      };
      const newData = [...data, newItem];
      // Update the JSON file or save the data to your backend
      console.log(newData);
    }
    // Clear form fields
    setName('');
    setDescription('');
    setContact('');
    setEditItemId(null); // Reset editItemId after submission
  };

  const handleEdit = (item) => {
    setName(item.name);
    setDescription(item.description);
    setContact(item.contact);
    setEditItemId(item.id);
  };

  return (
    <div className="App">
      <header>
        <h1>Lost and Found</h1>
      </header>
      <div className="container">
        <div className="row">
          <div className="col-md-12">
            <button type="button" className="btn btn-primary float-right" data-toggle="modal" data-target="#exampleModal">
              Lost item?
            </button>
          </div>
        </div>
        <div className="row">
          <div className="col-md-12">
            <div className="list-group">
              {data.map(item => (
                <div key={item.id} className="list-group-item">
                  <h2 className="list-group-item-heading">{item.name}</h2>
                  <p className="list-group-item-text">Description: {item.description}</p>
                  <p className="list-group-item-text">Contact: {item.contact}</p>
                  <button type="button" className="btn btn-primary" data-toggle="modal" data-target="#exampleModal" onClick={() => handleEdit(item)}>Edit</button>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* Modal */}
      <div className="modal fade" id="exampleModal" tabIndex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div className="modal-dialog" role="document">
          <div className="modal-content">
            <div className="modal-header">
              <h5 className="modal-title" id="exampleModalLabel">{editItemId !== null ? 'Edit Lost Item' : 'Add Lost Item'}</h5>
              <button type="button" className="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <form onSubmit={handleSubmit}>
              <div className="modal-body">
                <div className="form-group">
                  <label htmlFor="name">Name</label>
                  <input type="text" className="form-control" id="name" value={name} onChange={handleNameChange} required />
                </div>
                <div className="form-group">
                  <label htmlFor="description">Description</label>
                  <textarea className="form-control" id="description" rows="3" value={description} onChange={handleDescriptionChange} required></textarea>
                </div>
                <div className="form-group">
                  <label htmlFor="contact">Contact</label>
                  <input type="text" className="form-control" id="contact" value={contact} onChange={handleContactChange} required />
                </div>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" className="btn btn-primary">Save changes</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
}

export default App;
